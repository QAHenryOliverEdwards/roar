{"version":3,"sources":["functions/post-functionality/addEditProp.js","functions/construct-post-dictionary-functions/constructPostDictionaryFunc.js","components/homepage/DeleteButton.js","functions/button-functions/deleteFunc.js","components/homepage/EditButton.js","components/homepage/HideButton.js","functions/button-functions/hideFunc.js","components/homepage/Post.js","functions/button-functions/setEditFunc.js","functions/sleep.js","functions/button-functions/editSubmitFunc.js","components/homepage/PostEdit.js","functions/button-functions/unHideFunc.js","components/homepage/UnHideButton.js","components/homepage/PostHidden.js","components/homepage/PostTable.js","functions/getUserIDFunc.js","functions/button-functions/submitPostFunc.js","components/homepage/PostCreate.js","pages/Homepage.js","pages/About.js","components/root/GenericInput.js","functions/loginFunc.js","pages/Login.js","functions/registerFunc.js","pages/Register.js","functions/logoutFunc.js","pages/Logout.js","functions/resize-functionality/useWindowDimension.js","components/root/NavbarRoar.js","pages/SwitchRoar.js","App.js","index.js"],"names":["addEditProp","postList","forEach","post","index","array","constructPostDictionaryFunc","users","posts","userID","setPostDictionary","a","temp","initialSetup","removeDuplicates","addUserInfo","addUserOwnsPost","initialList","postItem","id","body","visibility","push","searchChildren","parent","children","recursionLevel","Array","isArray","length","child","childItem","removedList","usedID","item","includes","postID","user","lookupPost","name","fetch","response","json","userPost","ownsPost","currentUser","DeleteButton","props","deleteFunc","forceReload","Button","variant","className","onClick","forceReloadFunc","console","log","method","status","EditButton","editFunc","HideButton","hideFunc","postObj","headers","JSON","stringify","Post","postProps","setReplyFunc","Card","style","maxWidth","Title","Text","changeEditProps","sleep","editSubmitFunc","postBody","PostEdit","useState","editText","setEditText","typedEditText","event","target","value","rows","onChange","defaultValue","unHideFunc","UnHideButton","PostHidden","PostTable","postDictionary","postsToDisplay","setPostsToDisplay","signalChangeReplyBox","useCallback","constructPosts","newPostDictionary","tempPosts","useEffect","getUserIDFunc","auth","text","submitPostFunc","sessionStorage","getItem","PostCreate","postCreateText","setPostCreateText","userSetPostCreateText","document","querySelector","Homepage","loggedIn","allUsers","setAllUsers","allPosts","setAllPosts","updatePostDictionary","setUpdatePostDictionary","setUserID","getAndSetUserID","getUserID","parseInt","getAllUsers","allUsersResponse","getAllPosts","allPostsResponse","constructPageAndPosts","updateFunc","updateAllUsers","updateAllPosts","update","setInterval","clearInterval","About","href","GenericInput","inputFunc","type","placeholder","nameTag","loginFunc","username","password","setLoginFunc","auth_key","setItem","Login","setUsername","setPassword","registerFunc","email","bodyObj","Register","setName","setEmail","logoutFunc","setLoggedOut","setLoggedIn","Logout","loggedOut","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimension","windowsDimensions","setWindowsDimensions","handleResize","addEventListener","removeEventListener","NavbarRoar","navbarHeight","setNavbarHeight","offsetHeight","mint","top","Navbar","Nav","Item","to","color","Switch","exact","path","SwitchRoar","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cb6fad97.chunk.js","sourcesContent":["const addEditProp =(postList)=>{\r\n    postList.forEach((post,index,array)=>{\r\n        array[index]['editText'] = false\r\n    })\r\n    return postList\r\n}\r\n\r\nexport default addEditProp;","import addEditProp from \"../post-functionality/addEditProp\";\r\n\r\nconst constructPostDictionaryFunc = async (users, posts, userID, setPostDictionary) => {\r\n    let temp = initialSetup(posts)\r\n    temp = removeDuplicates(temp)\r\n    temp = addUserInfo(temp, users)\r\n    temp = addEditProp(temp)\r\n    temp = await addUserOwnsPost(temp, userID)\r\n    setPostDictionary(temp)\r\n}\r\n\r\nconst initialSetup = (posts) => {\r\n    const initialList = []\r\n    posts.forEach((post) => {\r\n        let postItem = {\r\n            'userID': 'none',\r\n            'postID': post.id,\r\n            'parentID': 'none',\r\n            'name': 'none',\r\n            'body': post.body,\r\n            'recursion-level': 0,\r\n            'visibility': post.visibility\r\n        }\r\n        initialList.push(postItem)\r\n        const searchChildren = (parent, children, recursionLevel) => {\r\n            if (Array.isArray(children) && (children.length !== 0)) {\r\n                recursionLevel += 1\r\n                children.forEach((child) => {\r\n                    let childItem = {\r\n                        'userID': 'none',\r\n                        'postID': child.id,\r\n                        'parentID': parent.id,\r\n                        'name': 'none',\r\n                        'body': child.body,\r\n                        'recursion-level': recursionLevel,\r\n                        'visibility': child.visibility\r\n                    }\r\n                    initialList.push(childItem)\r\n                    return searchChildren(child, child.children, recursionLevel)\r\n                })\r\n            }\r\n        }\r\n        searchChildren(post, post.children, 0)\r\n    })\r\n    return initialList\r\n}\r\n\r\nconst removeDuplicates = (initialList) => {\r\n    let removedList = []\r\n    let usedID = []\r\n    initialList.forEach((item) => {\r\n        if (!usedID.includes(item.postID)) {\r\n            removedList.push(item)\r\n            usedID.push(item.postID)\r\n        }\r\n    })\r\n    return removedList\r\n}\r\n\r\nconst addUserInfo = (postList, users) => {\r\n    if (users.length !== 0) {\r\n        postList.forEach((post, index, array) => {\r\n            let user = lookupPost(post, users)\r\n            array[index]['userID'] = user.id\r\n            array[index]['name'] = user.name\r\n        })\r\n    }\r\n    return postList\r\n}\r\n\r\nconst addUserOwnsPost = async (postList, userID) => {\r\n    if (userID) {\r\n        let response = await fetch(`http://roar-env.eba-hb5rpyxz.eu-west-2.elasticbeanstalk.com/users/read/${userID}`)\r\n        let user = await response.json()\r\n        user.posts.forEach((userPost) => {\r\n            postList.forEach((post, index, array) => {\r\n                if (userPost.id === post.postID) {\r\n                    array[index]['ownsPost'] = true\r\n                }\r\n            })\r\n        })\r\n        postList.forEach((post, index, array) => {\r\n            if (post.ownsPost !== true) {\r\n                array[index]['ownsPost'] = false\r\n            }\r\n        })\r\n    } else {\r\n        postList.forEach((post, index, array) => {\r\n            array[index]['ownsPost'] = false\r\n        })\r\n    }\r\n    return postList\r\n}\r\n\r\nconst lookupPost = (post, users) => {\r\n    let postID = post.postID\r\n    for (let user in users) {\r\n        let currentUser = users[user]\r\n        for (let post in users[user]['posts']) {\r\n            let currentPost = users[user]['posts'][post]\r\n            if (currentPost.id === postID) {\r\n                return currentUser\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default constructPostDictionaryFunc;","import {Button} from \"react-bootstrap\";\r\n\r\nconst DeleteButton = (props) => {\r\n    const {deleteFunc, postID, forceReload} = props\r\n    return (\r\n        <Button variant={'link'} className={'col-1 justify-content-end card-title button-no-decoration'}\r\n                onClick={() => {\r\n                    deleteFunc(postID, forceReload)\r\n                }} id={`delete-post-${postID}`}>{'\\u{1F5D1}'}</Button>\r\n    )\r\n}\r\n\r\nexport default DeleteButton;","const deleteFunc = async (postID, forceReloadFunc) => {\r\n    console.log(postID)\r\n    let response = await fetch(`http://roar-env.eba-hb5rpyxz.eu-west-2.elasticbeanstalk.com/posts/delete/${postID}`, {\r\n        method: 'DELETE'\r\n    })\r\n\r\n    if (response.status === 204) {\r\n        console.log('Delete Successful')\r\n        forceReloadFunc()\r\n    } else {\r\n        console.log('Delete Unsuccessful')\r\n    }\r\n\r\n    return response.status\r\n}\r\n\r\nexport default deleteFunc;","import {Button} from \"react-bootstrap\";\r\n\r\nconst EditButton =(props)=>{\r\n    const {editFunc, postID} = props\r\n    return (\r\n        <Button variant={'link'} className={'col-1 justify-content-end card-title button-no-decoration'}\r\n                onClick={()=>{\r\n                    editFunc(postID)\r\n                }} id={`edit-post-${postID}`}>{'\\u270F'}</Button>\r\n    )\r\n}\r\n\r\nexport default EditButton;","import {Button} from \"react-bootstrap\";\r\n\r\nconst HideButton = (props) => {\r\n    const {hideFunc, postID, forceReload} = props\r\n    return (\r\n        <Button variant={'link'} className={'col-1 justify-content-center card-title button-no-decoration'}\r\n                onClick={() => {\r\n                    hideFunc(postID, forceReload)\r\n                }} id={`hide-post-${postID}`}>{'\\u{1F4D5}'}</Button>\r\n    )\r\n}\r\n\r\nexport default HideButton;","const hideFunc = async (postID, forceReloadFunc)=>{\r\n    let postObj = {\r\n        'visibility': false\r\n    }\r\n\r\n    let response = await fetch(`http://roar-env.eba-hb5rpyxz.eu-west-2.elasticbeanstalk.com/posts/update/${postID}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'Application/json'\r\n        },\r\n        body: JSON.stringify(postObj)\r\n    })\r\n\r\n    if (response.status === 202) {\r\n        console.log('Hide succeeded')\r\n        forceReloadFunc()\r\n    } else {\r\n        console.log('Hide failed')\r\n    }\r\n}\r\n\r\nexport default hideFunc;","import {Card} from \"react-bootstrap\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport deleteFunc from \"../../functions/button-functions/deleteFunc\";\r\nimport EditButton from \"./EditButton\";\r\nimport HideButton from \"./HideButton\";\r\nimport hideFunc from \"../../functions/button-functions/hideFunc\";\r\n\r\nconst Post = (props) => {\r\n    const {postProps, setReplyFunc, forceReload} = props;\r\n    if (postProps['recursion-level'] === 0) {\r\n        return (\r\n            <div>\r\n                <Card className={'dark-green-bg'}>\r\n                    <div className={'container-fluid px-0 mx-0'}>\r\n                        <div className={'row'} style={{maxWidth: '100%'}}>\r\n                            <Card.Title className={'post-name col-9'}>{postProps.name}</Card.Title>\r\n                            <HideButton hideFunc={hideFunc} postID={postProps.postID} forceReload={forceReload}/>\r\n                            <EditButton editFunc={setReplyFunc} postID={postProps.postID}/>\r\n                            <DeleteButton deleteFunc={deleteFunc} postID={postProps.postID} forceReload={forceReload}/>\r\n                        </div>\r\n                        <div className={'row'} style={{maxWidth: '100%'}}>\r\n                            <Card.Text className={'post-text'}>{postProps.body}</Card.Text>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    } else if (postProps['recursion-level'] !== 0) {\r\n        return (\r\n            <div>\r\n                <Card className={'light-green-bg'}>\r\n                    <div className={'container-fluid px-0 mx-0'}>\r\n                        <div className={'row'} style={{maxWidth: '100%'}}>\r\n                            <Card.Title className={'post-name col-9'}>{postProps.name}</Card.Title>\r\n                            <HideButton hideFunc={hideFunc} postID={postProps.postID}/>\r\n                            <EditButton editFunc={setReplyFunc} postID={postProps.postID}/>\r\n                            <DeleteButton deleteFunc={deleteFunc} postID={postProps.postID} forceReload={forceReload}/>\r\n                        </div>\r\n                        <div className={'row'} style={{maxWidth: '100%'}}>\r\n                            <Card.Text className={'post-text'}>{postProps.body}</Card.Text>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post;","const changeEditProps = (postID, postList) => {\r\n    postList.forEach((post, index, array) => {\r\n        if (post.postID === postID) {\r\n            array[index]['editText'] = !array[index]['editText']\r\n            console.log('changed')\r\n        }\r\n    })\r\n    return postList\r\n}\r\n\r\nexport default changeEditProps;","function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default sleep;","import sleep from \"../sleep\";\r\n\r\nconst editSubmitFunc = async (postBody, postID, forceReloadFunc) => {\r\n    let postObj = {\r\n        'body': postBody,\r\n    }\r\n\r\n    let response = await fetch(`http://roar-env.eba-hb5rpyxz.eu-west-2.elasticbeanstalk.com/posts/update/${postID}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'Application/json'\r\n        },\r\n        body: JSON.stringify(postObj)\r\n    })\r\n\r\n    if (response.status === 202) {\r\n        console.log('Update succeeded')\r\n        forceReloadFunc()\r\n    } else {\r\n        console.log('Update failed')\r\n    }\r\n}\r\n\r\nexport default editSubmitFunc;","import {Button, Card} from \"react-bootstrap\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport deleteFunc from \"../../functions/button-functions/deleteFunc\";\r\nimport EditButton from \"./EditButton\";\r\nimport {useState} from \"react\";\r\nimport editSubmitFunc from \"../../functions/button-functions/editSubmitFunc\";\r\n\r\nconst PostEdit = (props) => {\r\n    const {postProps, setReplyFunc, forceReload} = props;\r\n\r\n    const [editText, setEditText] = useState('')\r\n\r\n    const typedEditText = (event) => {\r\n        setEditText(event.target.value)\r\n    }\r\n\r\n    if (postProps['recursion-level'] === 0) {\r\n        return (\r\n            <div>\r\n                <Card className={'dark-green-bg'}>\r\n                    <div className={'container-fluid px-0'}>\r\n                        <div className={'row'}>\r\n                            <Card.Title className={'post-name col-10'}>{postProps.name}</Card.Title>\r\n                            <EditButton editFunc={setReplyFunc} postID={postProps.postID}/>\r\n                            <DeleteButton deleteFunc={deleteFunc} postID={postProps.postID} forceReload={forceReload}/>\r\n                        </div>\r\n                    </div>\r\n                    <textarea className={'form-control post-text'} rows={2} onChange={(event) => {\r\n                        typedEditText(event)\r\n                    }} defaultValue={postProps.body}/>\r\n                    <Button variant={'primary'} onClick={() => {\r\n                        editSubmitFunc(editText, postProps.postID, forceReload);\r\n                        setReplyFunc(postProps.postID)\r\n                    }}>Finish Edit!</Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    } else if (postProps['recursion-level'] !== 0) {\r\n        return (\r\n            <div>\r\n                <Card className={'light-green-bg'}>\r\n                    <div className={'container-fluid px-0'}>\r\n                        <div className={'row'}>\r\n                            <Card.Title className={'post-name col-10'}>{postProps.name}</Card.Title>\r\n                            <EditButton editFunc={setReplyFunc} postID={postProps.postID}/>\r\n                            <DeleteButton deleteFunc={deleteFunc} postID={postProps.postID} forceReload={forceReload}/>\r\n                        </div>\r\n                    </div>\r\n                    <textarea className={'form-control post-text'} rows={2} onChange={(event) => {\r\n                        typedEditText(event)\r\n                    }} defaultValue={postProps.body}/>\r\n                    <Button variant={'primary'} onClick={() => {\r\n                        editSubmitFunc(editText, postProps.postID, forceReload);\r\n                        setReplyFunc(postProps.postID)\r\n                    }}>Finish Edit!</Button>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostEdit;","const unHideFunc = async (postID, forceReloadFunc)=>{\r\n\r\n    let postObj = {\r\n        'visibility': true\r\n    }\r\n\r\n    let response = await fetch(`http://roar-env.eba-hb5rpyxz.eu-west-2.elasticbeanstalk.com/posts/update/${postID}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'Application/json'\r\n        },\r\n        body: JSON.stringify(postObj)\r\n    })\r\n\r\n    if (response.status === 202) {\r\n        console.log('UnHide was Successful')\r\n        forceReloadFunc()\r\n    } else {\r\n        console.log('Hide failed')\r\n    }\r\n}\r\n\r\nexport default unHideFunc;","import {Button} from \"react-bootstrap\";\r\n\r\nconst UnHideButton =(props)=>{\r\n    const {unHideFunc, postID, forceReload} = props\r\n    return (\r\n        <Button variant={'link'} className={'col-1 justify-content-center card-title button-no-decoration'}\r\n                onClick={()=>{\r\n                    unHideFunc(postID, forceReload)\r\n                }} id={`show-post-${postID}`}>{'\\u{1F4D6}'}</Button>\r\n    )\r\n}\r\n\r\nexport default UnHideButton;","import {Card} from \"react-bootstrap\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport deleteFunc from \"../../functions/button-functions/deleteFunc\";\r\nimport unHideFunc from \"../../functions/button-functions/unHideFunc\";\r\nimport UnHideButton from \"./UnHideButton\";\r\n\r\nconst PostHidden = (props) => {\r\n    const {postProps, forceReload} = props;\r\n    if (postProps['recursion-level'] === 0) {\r\n        return (\r\n            <div>\r\n                <Card className={'dark-green-bg'}>\r\n                    <div className={'container-fluid px-0 mx-0'}>\r\n                        <div className={'row'} style={{maxWidth: '100%'}}>\r\n                            <Card.Title className={'post-name col-10'}>\r\n                                <p className={'float-start'}>{postProps.name}</p>\r\n                                <p className={'float-start warning-hidden-purple-text'}>{'This post is HIDDEN only you can see it!'}</p>\r\n                            </Card.Title>\r\n                            <UnHideButton unHideFunc={unHideFunc} postID={postProps.postID} forceReload={forceReload}/>\r\n                            <DeleteButton deleteFunc={deleteFunc} postID={postProps.postID} forceReload={forceReload}/>\r\n                        </div>\r\n                        <div className={'row'} style={{maxWidth: '100%'}}>\r\n                            <Card.Text className={'post-text'}>{postProps.body}</Card.Text>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    } else if (postProps['recursion-level'] !== 0) {\r\n        return (\r\n            <div>\r\n                <Card className={'light-green-bg'}>\r\n                    <div className={'container-fluid px-0 mx-0'}>\r\n                        <div className={'row'} style={{maxWidth: '100%'}}>\r\n                            <Card.Title className={'post-name col-10'}>\r\n                                <p className={'float-start'}>{postProps.name}</p>\r\n                                <p className={'float-start warning-hidden-purple-text'}>{'This post is HIDDEN only you can see it!'}</p>\r\n                            </Card.Title>                            <UnHideButton unHideFunc={unHideFunc} postID={postProps.postID} forceReload={forceReload}/>\r\n                            <DeleteButton deleteFunc={deleteFunc} postID={postProps.postID} forceReload={forceReload}/>\r\n                        </div>\r\n                        <div className={'row'} style={{maxWidth: '100%'}}>\r\n                            <Card.Text className={'post-text'}>{postProps.body}</Card.Text>\r\n                        </div>\r\n                    </div>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostHidden;","import Post from \"./Post\";\r\nimport {useCallback, useEffect, useState} from \"react\";\r\nimport changeEditProps from \"../../functions/button-functions/setEditFunc\";\r\nimport PostEdit from \"./PostEdit\";\r\nimport PostHidden from \"./PostHidden\";\r\n\r\nconst PostTable = (props) => {\r\n\r\n    const {postDictionary, forceReload} = props;\r\n\r\n    const [postsToDisplay, setPostsToDisplay] = useState([])\r\n\r\n    const signalChangeReplyBox = useCallback((postID) => {\r\n        let temp = changeEditProps(postID, postDictionary)\r\n        constructPosts(temp)\r\n    }, [postDictionary])\r\n\r\n    const constructPosts = useCallback((newPostDictionary) => {\r\n        const tempPosts = []\r\n        newPostDictionary.forEach((post) => {\r\n            console.log(post)\r\n            if (post.editText === false) {\r\n                if (post.visibility === true) {\r\n                    tempPosts.push(<Post postProps={post} key={post.postID}\r\n                                         setReplyFunc={signalChangeReplyBox} forceReload={forceReload}/>)\r\n                } else if (post.visibility === false) {\r\n                    tempPosts.push(<PostHidden postProps={post} key={post.postID}\r\n                                               forceReload={forceReload}/>)\r\n                }\r\n            } else if (post.editText === true) {\r\n                tempPosts.push(<PostEdit postProps={post} key={post.postID}\r\n                                         setReplyFunc={signalChangeReplyBox} forceReload={forceReload}/>)\r\n            }\r\n        })\r\n        setPostsToDisplay(tempPosts)\r\n    }, [signalChangeReplyBox])\r\n\r\n    useEffect(() => {\r\n        constructPosts(postDictionary)\r\n    }, [constructPosts])\r\n\r\n    return (\r\n        <div>\r\n            {postsToDisplay}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostTable;","const getUserIDFunc = async (auth)=>{\r\n    let response = await fetch('http://roar-env.eba-hb5rpyxz.eu-west-2.elasticbeanstalk.com/users/getID', {\r\n        headers: {\r\n            'token': auth\r\n        }\r\n    })\r\n    return await response.text();\r\n}\r\n\r\nexport default getUserIDFunc;","import getUserIDFunc from \"../getUserIDFunc\";\r\n\r\nconst submitPostFunc = async (postBody, forceReloadFunc)=>{\r\n\r\n    let auth = sessionStorage.getItem('auth-roar')\r\n    let userID = await getUserIDFunc(auth)\r\n\r\n    let postObj = {\r\n        'body': postBody,\r\n        'visibility': true,\r\n        'user': {\r\n            'id': userID\r\n        }\r\n    }\r\n\r\n    let response = await fetch('http://roar-env.eba-hb5rpyxz.eu-west-2.elasticbeanstalk.com/posts/create', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'Application/json'\r\n        },\r\n        body: JSON.stringify(postObj)\r\n    })\r\n\r\n    if (response.status === 201) {\r\n        console.log('Post Successful')\r\n        forceReloadFunc()\r\n    } else {\r\n        console.log('Post Unsuccessful')\r\n    }\r\n}\r\n\r\nexport default submitPostFunc;","import {Button} from \"react-bootstrap\";\r\nimport {useState} from \"react\";\r\nimport submitPostFunc from \"../../functions/button-functions/submitPostFunc\";\r\n\r\nconst PostCreate = (props) => {\r\n\r\n    const {forceReload} = props;\r\n\r\n    const [postCreateText, setPostCreateText] = useState('')\r\n\r\n    const userSetPostCreateText = (event) => {\r\n        setPostCreateText(event.target.value)\r\n    }\r\n\r\n    const resetPostCreationBox = () =>{\r\n        let textbox = document.querySelector('#post-box')\r\n        textbox.value = ''\r\n        setPostCreateText('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className={'title text-center'}>Speak Your Mind</h2>\r\n            <textarea className={'form-control'} rows={3} id={'post-box'} onChange={(event) => {\r\n                userSetPostCreateText(event)\r\n            }\r\n            }/>\r\n            <Button variant={'secondary'} className={'form-control'} onClick={() => {\r\n                submitPostFunc(postCreateText, forceReload); resetPostCreationBox()\r\n            }} id={'post-submit-button'}>Submit</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostCreate;","import {useCallback, useEffect, useState} from \"react\";\r\nimport constructPostDictionaryFunc from \"../functions/construct-post-dictionary-functions/constructPostDictionaryFunc\"\r\nimport PostTable from \"../components/homepage/PostTable\";\r\nimport PostCreate from \"../components/homepage/PostCreate\";\r\nimport getUserIDFunc from \"../functions/getUserIDFunc\";\r\n\r\nconst Homepage = (props) => {\r\n\r\n    const {loggedIn} = props;\r\n\r\n    const [allUsers, setAllUsers] = useState([]);\r\n    const [allPosts, setAllPosts] = useState([]);\r\n    const [postDictionary, setPostDictionary] = useState([]);\r\n    const [updatePostDictionary, setUpdatePostDictionary] = useState([]);\r\n    const [userID, setUserID] = useState(0);\r\n\r\n    // Getting and setting userID for setup purposes (if logged in)\r\n    const getAndSetUserID = useCallback(async ()=>{\r\n        let auth = sessionStorage.getItem('auth-roar')\r\n        let getUserID = await getUserIDFunc(auth)\r\n        getUserID = parseInt(getUserID, 10)\r\n        setUserID(getUserID)\r\n    }, [])\r\n\r\n    // Calling userID function if logged in\r\n    if (loggedIn) {\r\n        getAndSetUserID()\r\n    }\r\n\r\n    // Initial setup functions\r\n    const getAllUsers = useCallback(async () => {\r\n        if (!allUsers.length) {\r\n            let response = await fetch('http://roar-env.eba-hb5rpyxz.eu-west-2.elasticbeanstalk.com/users/read')\r\n            let allUsersResponse = await response.json()\r\n            setAllUsers(allUsersResponse)\r\n        }\r\n    }, [allUsers.length])\r\n\r\n    const getAllPosts = useCallback(async () => {\r\n        if (!allPosts.length) {\r\n            let response = await fetch('http://roar-env.eba-hb5rpyxz.eu-west-2.elasticbeanstalk.com/posts/read')\r\n            let allPostsResponse = await response.json()\r\n            setAllPosts(allPostsResponse)\r\n        }\r\n    }, [allPosts.length])\r\n\r\n    const constructPageAndPosts = useCallback(async () => {\r\n        await getAllUsers()\r\n        await getAllPosts()\r\n        await constructPostDictionaryFunc(allUsers, allPosts, userID, setPostDictionary)\r\n    }, [getAllUsers, getAllPosts, allUsers, allPosts, userID])\r\n\r\n    useEffect(() => {\r\n        constructPageAndPosts()\r\n    }, [constructPageAndPosts])\r\n\r\n    // Update Functions\r\n    const updateFunc = useCallback(async() =>{\r\n\r\n        let updateAllUsers = []\r\n        while (!updateAllUsers.length) {\r\n            let response = await fetch('http://roar-env.eba-hb5rpyxz.eu-west-2.elasticbeanstalk.com/users/read')\r\n            updateAllUsers = await response.json()\r\n        }\r\n\r\n        let updateAllPosts = []\r\n        while (!updateAllPosts.length) {\r\n            let response = await fetch('http://roar-env.eba-hb5rpyxz.eu-west-2.elasticbeanstalk.com/posts/read')\r\n            updateAllPosts = await response.json()\r\n        }\r\n\r\n        await constructPostDictionaryFunc(updateAllUsers, updateAllPosts, userID, setUpdatePostDictionary)\r\n\r\n        console.log(postDictionary.length)\r\n        console.log(updatePostDictionary.length)\r\n\r\n        if (postDictionary.length !== updatePostDictionary.length) {\r\n            console.log('Refresh to get new posts')\r\n        } else {\r\n            console.log('No new updates')\r\n        }\r\n    }, [postDictionary.length, updatePostDictionary.length, userID])\r\n\r\n    useEffect(()=>{\r\n        const update = setInterval(updateFunc, 3000)\r\n        return ()=> clearInterval(update)\r\n    })\r\n\r\n    // Force page reload function\r\n    const forceReload = useCallback(async ()=>{\r\n        setAllUsers([])\r\n        setAllPosts([])\r\n        constructPageAndPosts()\r\n    }, [constructPageAndPosts])\r\n\r\n    if (loggedIn === true) {\r\n        return (\r\n            <div>\r\n                <h1 className={'title text-center'}>Welcome to Roar</h1>\r\n                <PostCreate forceReload={forceReload}/>\r\n                <PostTable postDictionary={postDictionary} forceReload={forceReload}/>\r\n            </div>\r\n        )\r\n    } else if (loggedIn === false) {\r\n        return (\r\n            <div>\r\n                <h1 className={'title'}>Welcome to Roar</h1>\r\n                <PostTable postDictionary={postDictionary} forceReload={forceReload}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homepage;","const About = () => {\r\n    return (\r\n        <div id={'about-page'}>\r\n            <h1 className={'title text-center'}>About Roar</h1>\r\n            <p className={'about-text mx-3'}>Roar is a small project developed by <a\r\n                href={'https://github.com/QAHenryOliverEdwards'} id={'link-henry-github'}>Henry Oliver-Edwards</a> ,\r\n                <a href={'https://github.com/CGuthrieQA'} id={'link-cameron-github'}>Cameron Guthrie</a> and <a\r\n                    href={'https://github.com/giefortunaQA'} id={'link-gie_ann-github'}>Gie-Anne Fortuna </a>. It aims to\r\n                be an online means of communication, which takes inspiration from other social media platforms such as\r\n                twitter and Facebook. It aims to be similar\r\n                to these platforms while providing it's own unique twist, as well as letting us practice the skills we\r\n                have learnt and let us pick-up new skills along the way.\r\n                <br/>\r\n                <br/>\r\n                There are 3 major groups of technologies used in this project, the back-end (the part of application\r\n                which you do not see, it handles web requests,\r\n                managing of the database and processing) it written in Java, using the Spring Boot framework. The\r\n                front-end (the part of the application you interact\r\n                with is written in JavaScript using the React framework. And finally we used AWS to deploy the\r\n                application. Since this is an opensource project, all of\r\n                the source code can be found on out <a href={'https://github.com/QAHenryOliverEdwards/roar'} id={'link-roar-github'}>Github\r\n                    repository</a>.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","const GenericInput = (props) => {\r\n    const {inputFunc, type, placeholder, nameTag} = props;\r\n    return (\r\n        <input type={type} onChange={(event) => {\r\n            inputFunc(event)\r\n        }}\r\n               className={'form-control rounded-pill my-1'} placeholder={placeholder} id={`${nameTag}-input`}/>\r\n    )\r\n}\r\n\r\nexport default GenericInput;","const loginFunc = async (username, password, setLoginFunc) => {\r\n\r\n    let response = await fetch('http://roar-env.eba-hb5rpyxz.eu-west-2.elasticbeanstalk.com/users/login', {\r\n        method: 'POST',\r\n        headers: {\r\n            'username': username,\r\n            'password': password\r\n        }\r\n    })\r\n\r\n    let auth_key = await response.text();\r\n\r\n    if (auth_key !== 'INVALID') {\r\n        sessionStorage.setItem('auth-roar', auth_key);\r\n        console.log('Successfully logged in');\r\n        setLoginFunc(true);\r\n    } else {\r\n        console.log('Unsuccessful attempt');\r\n    }\r\n}\r\n\r\nexport default loginFunc;","import {useState} from \"react\";\r\nimport GenericInput from \"../components/root/GenericInput\";\r\nimport loginFunc from \"../functions/loginFunc\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst Login =(props)=>{\r\n\r\n    const {setLoginFunc} = props;\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const inputUsername = (event) =>{\r\n        setUsername(event.target.value)\r\n    }\r\n\r\n    const inputPassword = (event)=>{\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className={'container-fluid mt-3 '}>\r\n            <h3 className={'title text-center'}>Login</h3>\r\n            <GenericInput type={'text'} inputFunc={inputUsername} placeholder={'Username'} nameTag={'username'}/>\r\n            <GenericInput type={'password'} inputFunc={inputPassword} placeholder={'Password'} nameTag={'password'}/>\r\n            <Button variant={'secondary'} onClick={()=>{loginFunc(username, password, setLoginFunc)}}\r\n                    className={'rounded-pill form-control'} id={'login-button'}>Login</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import loginFunc from \"./loginFunc\";\r\n\r\nconst registerFunc = async (username, name, email, password, setLoginFunc)=>{\r\n\r\n    let bodyObj = {\r\n        'username': username,\r\n        'name': name,\r\n        'email': email,\r\n        'password': password\r\n    }\r\n\r\n    let response = await fetch('http://roar-env.eba-hb5rpyxz.eu-west-2.elasticbeanstalk.com/users/create', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(bodyObj)\r\n    })\r\n\r\n    if (response.status === 201) {\r\n        console.log('Successfully created');\r\n        await loginFunc(username, password, setLoginFunc);\r\n    } else {\r\n        console.log('Unsuccessful!')\r\n    }\r\n}\r\n\r\nexport default registerFunc;","import {useState} from \"react\";\r\nimport GenericInput from \"../components/root/GenericInput\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport registerFunc from \"../functions/registerFunc\";\r\n\r\nconst Register = (props) => {\r\n\r\n    const {setLoginFunc} = props;\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const inputUsername = (event) => {\r\n        setUsername(event.target.value)\r\n    }\r\n\r\n    const inputName = (event) => {\r\n        setName(event.target.value)\r\n    }\r\n\r\n    const inputEmail = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const inputPassword = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className={'container-fluid mt-3 '}>\r\n            <h3 className={'title text-center'}>Register</h3>\r\n            <GenericInput type={'text'} inputFunc={inputUsername} placeholder={'Username'} nameTag={'username'}/>\r\n            <GenericInput type={'text'} inputFunc={inputName} placeholder={'Name'} nameTag={'name'}/>\r\n            <GenericInput type={'text'} inputFunc={inputEmail} placeholder={'Email'} nameTag={'email'}/>\r\n            <GenericInput type={'password'} inputFunc={inputPassword} placeholder={'Password'} nameTag={'password'}/>\r\n            <Button variant={'secondary'} onClick={()=>{registerFunc(username, name, email, password, setLoginFunc)}}\r\n                    className={'rounded-pill form-control'} id={'register-button'}>Register</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","const logoutFunc = async (setLoggedOut, setLoggedIn)=>{\r\n\r\n    let auth = sessionStorage.getItem('auth-roar')\r\n    let response = await fetch('http://roar-env.eba-hb5rpyxz.eu-west-2.elasticbeanstalk.com/users/logout', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'Application/json',\r\n            'token': auth\r\n        }\r\n    })\r\n\r\n    if (response.status === 200) {\r\n        console.log('Successfully logged out')\r\n        setLoggedOut(true)\r\n        setLoggedIn(false)\r\n    } else {\r\n        console.log('Unsuccessful attempt')\r\n        setLoggedOut(false)\r\n    }\r\n}\r\n\r\nexport default logoutFunc;","import {useEffect, useState} from \"react\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport logoutFunc from \"../functions/logoutFunc\";\r\n\r\nconst Logout = (props) => {\r\n\r\n    const {setLoginFunc} = props;\r\n\r\n    const [loggedOut, setLoggedOut] = useState(null)\r\n\r\n    if (loggedOut === null) {\r\n        return (\r\n            <Button variant={'secondary'} onClick={() => {\r\n                logoutFunc(setLoggedOut, setLoginFunc)\r\n            }}>\r\n                Click to logout\r\n            </Button>\r\n        )\r\n    } else if (loggedOut === true) {\r\n        return (\r\n            <h1>Successful logout</h1>\r\n        )\r\n    } else if (loggedOut === false) {\r\n        return (\r\n            <div>\r\n                <h1>Unsuccessful logout try again</h1>\r\n                <Button variant={'secondary'} onClick={() => {\r\n                    logoutFunc(setLoggedOut, setLoginFunc)\r\n                }}>\r\n                    Click to logout</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Logout;","import {useEffect, useState} from \"react\";\r\n\r\nconst getWindowDimensions =()=>{\r\n    const {innerWidth: width, innerHeight: height} = window\r\n    return ({width, height})\r\n}\r\n\r\nconst useWindowDimension =()=>{\r\n    const [windowsDimensions, setWindowsDimensions] = useState(getWindowDimensions())\r\n\r\n    useEffect(()=>{\r\n        const handleResize =()=>{\r\n            setWindowsDimensions(getWindowDimensions())\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n        return ()=> window.removeEventListener('resize', handleResize)\r\n    }, [])\r\n\r\n    return windowsDimensions\r\n}\r\n\r\nexport default useWindowDimension;","import {Navbar, Nav} from \"react-bootstrap\";\r\nimport {BrowserRouter, Link, Route, Redirect} from \"react-router-dom\";\r\nimport Switch from \"react-bootstrap/Switch\";\r\nimport Homepage from \"../../pages/Homepage\";\r\nimport About from \"../../pages/About\";\r\nimport Login from \"../../pages/Login\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Register from \"../../pages/Register\";\r\nimport Logout from \"../../pages/Logout\";\r\nimport useWindowDimension from \"../../functions/resize-functionality/useWindowDimension\";\r\n\r\nconst NavbarRoar = () => {\r\n\r\n    const {width, height} = useWindowDimension()\r\n\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [navbarHeight, setNavbarHeight] = useState()\r\n\r\n    useEffect(() => {\r\n        let navbarElement = document.querySelector('#nav-props');\r\n        let navbarHeight = navbarElement.offsetHeight;\r\n        let newHeight = height - navbarHeight;\r\n        setNavbarHeight(newHeight);\r\n    })\r\n\r\n    const mint = '#00A170'\r\n\r\n    if (loggedIn === false) {\r\n        return (\r\n            <BrowserRouter>\r\n                <div className={'container-fluid fixed-bottom px-0'} style={{top: `${navbarHeight}px`}}>\r\n                    <Navbar className={'row py-0 dark-blue-bg'} id={'nav-props'}>\r\n                        <Nav>\r\n                            <Nav.Item className={'col-3 text-center navbar-text'}><Link\r\n                                to={'/home'} style={{color: mint}} id={'home'}>Home</Link></Nav.Item>\r\n                            <Nav.Item className={'col-3 text-center navbar-text'}><Link\r\n                                to={'/about'} style={{color: mint}} id={'about'}>About</Link></Nav.Item>\r\n                            <Nav.Item className={'col-3 text-center navbar-text'}><Link\r\n                                to={'/login'} style={{color: mint}} id={'login'}>Login</Link></Nav.Item>\r\n                            <Nav.Item className={'col-3 text-center navbar-text'}><Link\r\n                                to={'/register'} style={{color: mint}} id={'register'}>Register</Link></Nav.Item>\r\n                        </Nav>\r\n                    </Navbar>\r\n                </div>\r\n                <Switch>\r\n                    <Route exact path={'/'}>\r\n                        <Homepage loggedIn={loggedIn}/>\r\n                    </Route>\r\n                    <Route path={'/home'}>\r\n                        <Homepage loggedIn={loggedIn}/>\r\n                    </Route>\r\n                    <Route path={'/about'}>\r\n                        <About/>\r\n                    </Route>\r\n                    <Route path={'/login'}>\r\n                        {loggedIn ? <Redirect to={'/home'}/> : <Login setLoginFunc={setLoggedIn}/>}\r\n                    </Route>\r\n                    <Route path={'/register'}>\r\n                        {loggedIn ? <Redirect to={'/home'}/> : <Register setLoginFunc={setLoggedIn}/>}\r\n                    </Route>\r\n                    <Route path={'/logout'}>\r\n                        {loggedIn ? <Logout setLoginFunc={setLoggedIn}/> : <Redirect to={'/home'}/>}\r\n                    </Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n    } else if (loggedIn === true) {\r\n        return (\r\n            <BrowserRouter>\r\n                <div className={'container-fluid fixed-bottom px-0'} id={'navbar-link'}\r\n                     style={{top: `${navbarHeight}px`}}>\r\n                    <Navbar className={'row py-0'} id={'nav-props'}>\r\n                        <Nav>\r\n                            <Nav.Item className={'col-4 text-center navbar-text'}><Link\r\n                                to={'/home'} style={{color: mint}} id={'home'}>Home</Link></Nav.Item>\r\n                            <Nav.Item className={'col-4 text-center navbar-text'}><Link\r\n                                to={'/about'} style={{color: mint}} id={'about'}>About</Link></Nav.Item>\r\n                            <Nav.Item className={'col-4 text-center navbar-text'}><Link\r\n                                to={'/logout'} style={{color: mint}} id={'logout'}>Logout</Link></Nav.Item>\r\n                        </Nav>\r\n                    </Navbar>\r\n                </div>\r\n                <Switch>\r\n                    <Route exact path={'/'}>\r\n                        <Homepage loggedIn={loggedIn}/>\r\n                    </Route>\r\n                    <Route path={'/home'}>\r\n                        <Homepage loggedIn={loggedIn}/>\r\n                    </Route>\r\n                    <Route path={'/about'}>\r\n                        <About/>\r\n                    </Route>\r\n                    <Route path={'/login'}>\r\n                        {loggedIn ? <Redirect to={'/home'}/> : <Login setLoginFunc={setLoggedIn}/>}\r\n                    </Route>\r\n                    <Route path={'/register'}>\r\n                        {loggedIn ? <Redirect to={'/home'}/> : <Register setLoginFunc={setLoggedIn}/>}\r\n                    </Route>\r\n                    <Route path={'/logout'}>\r\n                        {loggedIn ? <Logout setLoginFunc={setLoggedIn}/> : <Redirect to={'/home'}/>}\r\n                    </Route>\r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavbarRoar;","import NavbarRoar from \"../components/root/NavbarRoar\";\r\n\r\nconst SwitchRoar =()=>{\r\n    return (\r\n        <NavbarRoar/>\r\n    )\r\n}\r\n\r\nexport default SwitchRoar;","import './css/bootstrap.css';\nimport './css/roar.css';\nimport './css/fonts.css';\nimport SwitchRoar from \"./pages/SwitchRoar\";\n\nfunction App() {\n    return (\n        <div>\n            <SwitchRoar/>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}