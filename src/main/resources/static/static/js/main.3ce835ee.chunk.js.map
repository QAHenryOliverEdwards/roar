{"version":3,"sources":["coponents/Title.js","coponents/Searchbar.js","functions/constructPostDictionary.js","coponents/Post.js","coponents/Reply.js","coponents/PostsTable.js","coponents/LogoutButton.js","coponents/MakePost.js","pages/Homepage.js","coponents/LoginInput.js","coponents/PasswordInput.js","coponents/LoginTitle.js","coponents/RegisterButton.js","coponents/LoginButton.js","coponents/RegisterTitle.js","coponents/FormInput.js","pages/Register.js","pages/LoginRegister.js","App.js","index.js"],"names":["Title","props","style","className","Searchbar","userInputFunc","searchFunc","InputGroup","type","onChange","event","Button","variant","onClick","constructPostDictionary","allUsers","postDictionaryList","forEach","user","posts","post","postItem","id","name","body","searchChildren3","parent","children","recursionLevel","Array","isArray","length","child","childrenID","push","pID","cID","level","Post","Card","Text","Reply","PostsTable","postDictionary","elementArray","getPost","ID","postID","maxLevel","a","b","constructChildren","parentID","postsToRemove","replyObj","match","index","includes","splice","fp","initialParentID","makePostElement","LogoutButton","setLogoutFunc","sessionStorage","setItem","MakePost","setPostText","submitPostFunc","rows","Homepage","useState","setAllUsers","setPostDictionary","searchText","setSearchText","postText","getAllUsers","useCallback","fetch","response","json","constructAllPosts","newPostDictionary","constructPage","submitPost","auth","getItem","headers","text","userID","postObj","method","JSON","stringify","status","console","log","useEffect","target","value","LoginInput","inputFunc","placeholder","PasswordInput","LoginTitle","RegisterButton","redirectFunc","LoginButton","loginFunc","RegisterTitle","FormInput","Register","setLoginFunc","username","setUsername","setName","email","setEmail","password","setPassword","auth_key","submitUserData","bodyObj","LoginRegister","register","setRegister","inputUsername","inputPassword","registerRedirectFunc","defaultValue","App","loggedIn","setLoggedIn","page","setPage","checkLoggedIn","getPageToDisplay","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ce835ee.chunk.js","sourcesContent":["const Title =(props)=>{\r\n    const {style} = props;\r\n    return (\r\n        <h1 className={'title'} style={style}>Welcome to Roar</h1>\r\n    )\r\n}\r\n\r\nexport default Title;","import {InputGroup, Button} from \"react-bootstrap\";\r\n\r\nconst Searchbar = (props) => {\r\n    const {userInputFunc, searchFunc} = props;\r\n    return (\r\n        <InputGroup className={'my-3'}>\r\n            <input type={'search'} onChange={(event) => (userInputFunc(event))} className={'form-control'}/>\r\n            <Button variant={'secondary'} onClick={()=>(searchFunc())}>Search</Button>\r\n        </InputGroup>\r\n    )\r\n}\r\n\r\nexport default Searchbar;","const constructPostDictionary =(allUsers)=>{\r\n    const postDictionaryList = [];\r\n    allUsers.forEach((user)=>{\r\n        user.posts.forEach((post)=>{\r\n            let postItem = {\r\n                'postID': post.id,\r\n                'name': user.name,\r\n                'body': post.body,\r\n                'childrenID': []\r\n            }\r\n            const searchChildren3 =(parent, children, recursionLevel)=>{\r\n                if (Array.isArray(children) && (children.length !== 0)) {\r\n                    children.forEach((child)=>{\r\n                        postItem.childrenID.push({pID: parent.id, cID: child.id, level: recursionLevel});\r\n                        recursionLevel += 1;\r\n                        return searchChildren3(child, child.children, recursionLevel);\r\n                    })\r\n                } else {\r\n                    return postItem;\r\n                }\r\n            }\r\n            searchChildren3(post, post.children, 1);\r\n            postDictionaryList.push(postItem);\r\n        })\r\n    })\r\n    return postDictionaryList;\r\n}\r\n\r\nexport default constructPostDictionary;","import {Card} from \"react-bootstrap\";\r\n\r\nconst Post =(props)=>{\r\n    const {post} = props;\r\n    return (\r\n        <div>\r\n            <Card className={'dark-green-bg'}>\r\n                <Card.Title className={'post-name'}>{post.name}</Card.Title>\r\n                <Card.Text className={'post-text'}>{post.body}</Card.Text>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import {Card} from \"react-bootstrap\";\r\n\r\nconst Reply =(props)=>{\r\n    const {post} = props;\r\n    return (\r\n        <div>\r\n            <Card className={'light-green-bg'}>\r\n                <Card.Title className={'post-name'}>{post.name}</Card.Title>\r\n                <Card.Text className={'post-text'}>{post.body}</Card.Text>\r\n                <Card.Text className={'post-text'}>At reply level {post.level}</Card.Text>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reply;","import Post from \"./Post\";\r\nimport Reply from \"./Reply\";\r\n\r\nconst PostsTable = (props) => {\r\n\r\n    const {postDictionary} = props;\r\n\r\n    const elementArray = [];\r\n\r\n    const makePostElement = () => {\r\n        \r\n        const getPost = (ID) => {\r\n            for (let post in postDictionary) {\r\n                if (postDictionary[post].postID === ID) {\r\n                    return {\r\n                        'postID': postDictionary[post].postID,\r\n                        'name': postDictionary[post].name,\r\n                        'body': postDictionary[post].body\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let maxLevel = 0;\r\n\r\n        const getMaxLevel = () => {\r\n            postDictionary.forEach((post) => {\r\n                let a = 0;\r\n                let b = post.postID;\r\n                if (b > a) {\r\n                    maxLevel = b;\r\n                }\r\n                a = b;\r\n            })\r\n        }\r\n\r\n        getMaxLevel();\r\n\r\n        const removePosts = (posts) => {\r\n            postDictionary.forEach((post, index, postDictionary)=>{\r\n                if (posts.includes(post.postID)) {\r\n                    postDictionary.splice(index, 1);\r\n                }\r\n            })\r\n        }\r\n\r\n        const constructChildren = (children, parentID) => {\r\n            let postsToRemove = [];\r\n            children.forEach((replyObj) => {\r\n                if (replyObj.pID === parentID) {\r\n                    let match = getPost(replyObj.cID);\r\n                    match.level = replyObj.level;\r\n                    elementArray.push(<Reply post={match} key={replyObj.cID}/>);\r\n                    postsToRemove.push(replyObj.cID);\r\n                }\r\n            })\r\n            removePosts(postsToRemove);\r\n        }\r\n\r\n        postDictionary.forEach((post, index, postDictionary) => {\r\n            let fp = getPost(post.postID);\r\n            elementArray.push(<Post post={fp} key={post.postID}/>);\r\n            let initialParentID = post.postID;\r\n            while (initialParentID <= maxLevel) {\r\n                constructChildren(post.childrenID, initialParentID);\r\n                initialParentID += 1;\r\n            }\r\n            postDictionary.splice(index, 1);\r\n        })\r\n\r\n        return elementArray;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {makePostElement()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostsTable;","import {Button} from \"react-bootstrap\";\r\n\r\nconst LogoutButton =(props)=>{\r\n    const {setLogoutFunc, style} = props;\r\n    return (\r\n        <Button variant={'secondary'} onClick={()=>(setLogoutFunc(false), sessionStorage.setItem('auth-roar', ''))}\r\n        className={'rounded-pill'}>Logout</Button>\r\n    )\r\n}\r\n\r\nexport default LogoutButton;","import {Button} from \"react-bootstrap\";\r\n\r\nconst MakePost =(props)=>{\r\n\r\n    const {setPostText, submitPostFunc} = props;\r\n\r\n    return (\r\n        <div className={'my-2'}>\r\n            <h3 className={'title'}>Speak You Mind</h3>\r\n            <textarea className={'form-control'} rows={3} id={'post-box'}\r\n            onChange={event => {setPostText(event)}}/>\r\n            <Button variant={'secondary'} onClick={()=>{submitPostFunc()}}>Submit Post</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MakePost;","import {useCallback, useEffect, useState} from \"react\";\r\nimport Title from \"../coponents/Title\";\r\nimport Searchbar from \"../coponents/Searchbar\";\r\nimport constructPostDictionary from \"../functions/constructPostDictionary\";\r\nimport PostsTable from \"../coponents/PostsTable\";\r\nimport LogoutButton from \"../coponents/LogoutButton\";\r\nimport MakePost from \"../coponents/MakePost\";\r\n\r\nconst Homepage = (props) => {\r\n\r\n    const {setLogoutFunc} = props;\r\n\r\n    const [allUsers, setAllUsers] = useState([]);\r\n    const [postDictionary, setPostDictionary] = useState([]);\r\n    const [searchText, setSearchText] = useState('');\r\n    const [postText, setPostText] = useState('');\r\n\r\n    const getAllUsers = useCallback(async () => {\r\n        if (!allUsers.length) {\r\n            let response = await fetch('http://127.0.0.1:8082/users/read');\r\n            let allUsers = await response.json();\r\n            setAllUsers(allUsers);\r\n        }\r\n    }, [allUsers.length]);\r\n\r\n    const constructAllPosts = useCallback(() => {\r\n        let newPostDictionary = constructPostDictionary(allUsers);\r\n        if (newPostDictionary.length) {\r\n            setPostDictionary(newPostDictionary);\r\n        } else {\r\n            setPostDictionary([]);\r\n        }\r\n    }, [allUsers]);\r\n\r\n    const constructPage = useCallback(async () => {\r\n        await getAllUsers();\r\n        await constructAllPosts();\r\n    }, [constructAllPosts, getAllUsers]);\r\n\r\n    const submitPost = useCallback(async ()=>{\r\n        let auth = sessionStorage.getItem('auth-roar');\r\n        let response = await fetch(`http://127.0.0.1:8082/users/getID`, {\r\n            headers: {\r\n                'token': auth\r\n            }\r\n        })\r\n        let userID = await response.text();\r\n        let postObj = {\r\n            'body': postText,\r\n            'visibility': true,\r\n            'user': {\r\n                'id': userID\r\n            }\r\n        }\r\n        let postResponse = await fetch('http://127.0.0.1:8082/posts/create', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(postObj)\r\n        })\r\n\r\n        if (postResponse.status === 201) {\r\n            console.log('Post successful')\r\n        } else {\r\n            console.log('Post unsuccessful')\r\n        }\r\n    }, [postText])\r\n\r\n    const handleInputText = (event) => {\r\n        setSearchText(event.target.value);\r\n    }\r\n\r\n    const handlePostText =(event)=>{\r\n        setPostText(event.target.value);\r\n    }\r\n\r\n    const constructSearch = () => {\r\n        console.log('feature coming soon');\r\n        // constructAllPosts();\r\n    }\r\n\r\n    useEffect(() => {\r\n        constructPage();\r\n    }, [constructPage, searchText, postText])\r\n\r\n    return (\r\n        <div className={'container-fluid mt-3 col-lg-6 col-sm-12'}>\r\n            <div className={'row'}>\r\n                <Title/>\r\n                <LogoutButton setLogoutFunc={setLogoutFunc}/>\r\n                <MakePost setPostText={handlePostText} submitPostFunc={submitPost}/>\r\n            </div>\r\n            <div className={'row'}>\r\n                <Searchbar userInputFunc={handleInputText} searchFunc={constructSearch}/>\r\n                <PostsTable postDictionary={postDictionary}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage;","const LoginInput =(props)=>{\r\n    const {inputFunc} = props;\r\n    return (\r\n        <input type={'text'} onChange={event => inputFunc(event)}\r\n               className={'form-control rounded-pill my-1'} placeholder={'Username'}/>\r\n    )\r\n}\r\n\r\nexport default LoginInput;","const PasswordInput =(props)=>{\r\n    const {inputFunc} = props;\r\n    return (\r\n        <input type={'password'} onChange={event => inputFunc(event)}\r\n               className={'form-control rounded-pill my-1'} placeholder={'Password'}/>\r\n    )\r\n}\r\n\r\nexport default PasswordInput;","const LoginTitle =()=>{\r\n    return (\r\n        <h3 className={'title text-center'}>Login</h3>\r\n    )\r\n}\r\n\r\nexport default LoginTitle;","import {Button} from \"react-bootstrap\";\r\n\r\nconst RegisterButton = (props) => {\r\n    const {redirectFunc} = props;\r\n    return (\r\n        <Button variant={'secondary'} onClick={() => (redirectFunc())}\r\n                className={'rounded-pill form-control my-1'}>Register</Button>\r\n    )\r\n}\r\n\r\nexport default RegisterButton;","import {Button} from \"react-bootstrap\";\r\n\r\nconst LoginButton = (props) => {\r\n    const {loginFunc} = props;\r\n    return (\r\n        <Button variant={'secondary'} onClick={() => (loginFunc())}\r\n                className={'rounded-pill form-control'}>Login</Button>\r\n    )\r\n}\r\n\r\nexport default LoginButton;","const RegisterTitle =()=>{\r\n    return (\r\n        <h3 className={'title text-center'}>Register</h3>\r\n    )\r\n}\r\n\r\nexport default RegisterTitle;","const FormInput =(props)=>{\r\n    const {inputFunc, type, placeholder} = props;\r\n    return (\r\n        <input type={type} onChange={event => inputFunc(event)}\r\n        className={'form-control rounded-pill my-1'} placeholder={placeholder}/>\r\n    )\r\n}\r\n\r\nexport default FormInput;","import {useCallback, useState} from \"react\";\r\nimport RegisterTitle from \"../coponents/RegisterTitle\";\r\nimport FormInput from \"../coponents/FormInput\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\nconst Register = (props) => {\r\n\r\n    const {setLoginFunc} = props;\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const inputUsername = (event) => {\r\n        setUsername(event.target.value)\r\n    }\r\n\r\n    const inputName = (event) => {\r\n        setName(event.target.value)\r\n    }\r\n\r\n    const inputEmail = (event) => {\r\n        setEmail(event.target.value)\r\n    }\r\n\r\n    const inputPassword = (event) => {\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const loginFunc = useCallback(async () => {\r\n        console.log(`username: ${username}, password: ${password}`)\r\n        let response = await fetch('http://127.0.0.1:8082/users/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'username': username,\r\n                'password': password\r\n            }\r\n        });\r\n        let auth_key = await response.text();\r\n        if (auth_key !== 'INVALID') {\r\n            sessionStorage.setItem('auth-roar', auth_key);\r\n            console.log('Successfully logged in');\r\n            setLoginFunc(true);\r\n        } else {\r\n            console.log('Unsuccessful attempt');\r\n        }\r\n    }, [password, setLoginFunc, username])\r\n\r\n    const submitUserData = async () => {\r\n\r\n        let bodyObj = {\r\n            'username': username,\r\n            'name': name,\r\n            'email': email,\r\n            'password': password\r\n        }\r\n\r\n        let response = await fetch('http://127.0.0.1:8082/users/create', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(bodyObj)\r\n        })\r\n\r\n        if (response.status === 201) {\r\n            console.log('Successfully created');\r\n            // setLoginUsername(username);\r\n            // setLoginPassword(password);\r\n            // setRegister(false);\r\n            await loginFunc();\r\n        } else {\r\n            console.log('Unsuccessful!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={'container-fluid mt-3 col-lg-6 col-sm-12'}>\r\n            <RegisterTitle/>\r\n            <FormInput inputFunc={inputUsername} type={'text'} placeholder={'Username'}/>\r\n            <FormInput inputFunc={inputName} type={'text'} placeholder={'Name'}/>\r\n            <FormInput inputFunc={inputEmail} type={'email'} placeholder={'Email'}/>\r\n            <FormInput inputFunc={inputPassword} type={'password'} placeholder={'Password'}/>\r\n            <Button variant={'secondary'} onClick={() => {\r\n                submitUserData()\r\n            }} className={'rounded-pill form-control'}>Submit</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;","import {useCallback, useEffect, useState} from \"react\";\r\nimport LoginInput from \"../coponents/LoginInput\";\r\nimport PasswordInput from \"../coponents/PasswordInput\";\r\nimport LoginTitle from \"../coponents/LoginTitle\";\r\nimport RegisterButton from \"../coponents/RegisterButton\";\r\nimport LoginButton from \"../coponents/LoginButton\";\r\nimport Register from \"./Register\";\r\n\r\nconst LoginRegister =(props)=>{\r\n\r\n    const {setLoginFunc} = props;\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [register, setRegister] = useState(false);\r\n\r\n    const inputUsername = (event) =>{\r\n        setUsername(event.target.value)\r\n    }\r\n\r\n    const inputPassword = (event)=>{\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const registerRedirectFunc =()=>{\r\n        setRegister(true);\r\n    }\r\n    \r\n    const loginFunc = useCallback(async()=>{\r\n            console.log(`username: ${username}, password: ${password}`)\r\n            let response = await fetch('http://127.0.0.1:8082/users/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'username': username,\r\n                    'password': password\r\n                }\r\n            });\r\n            let auth_key = await response.text();\r\n            if (auth_key !== 'INVALID') {\r\n                sessionStorage.setItem('auth-roar', auth_key);\r\n                console.log('Successfully logged in');\r\n                setLoginFunc(true);\r\n            } else {\r\n                console.log('Unsuccessful attempt');\r\n            }\r\n    }, [password, setLoginFunc, username])\r\n\r\n    const constructPage = useCallback(()=>{\r\n        console.log(`username: ${username}, password: ${password}`)\r\n        if (!register) {\r\n            return (\r\n                <div className={'container-fluid mt-3 col-lg-6 col-sm-12'}>\r\n                    <LoginTitle/>\r\n                    <LoginInput inputFunc={inputUsername} defaultValue={username}/>\r\n                    <PasswordInput inputFunc={inputPassword} defaultValue={password}/>\r\n                    <LoginButton loginFunc={loginFunc}/>\r\n                    <div className={'separator post-text'}>Or</div>\r\n                    <RegisterButton redirectFunc={registerRedirectFunc}/>\r\n                </div>\r\n            )\r\n        } else if (register) {\r\n            return (\r\n                <Register setLoginFunc={setLoginFunc}/>\r\n            )\r\n        }\r\n    }, [loginFunc, password, register, username])\r\n\r\n    // useEffect(()=>{\r\n    //     constructPage()\r\n    // }, [constructPage])\r\n\r\n    return (\r\n        <div>\r\n            {constructPage()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginRegister;","import './css/bootstrap.css';\r\nimport './css/roar.css'\r\nimport './css/fonts.css';\r\nimport Homepage from \"./pages/Homepage\";\r\nimport {useCallback, useEffect, useState} from \"react\";\r\nimport LoginRegister from \"./pages/LoginRegister\";\r\n\r\nconst App = () => {\r\n\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [page, setPage] = useState([]);\r\n\r\n    const checkLoggedIn = useCallback(()=>{\r\n        let auth = sessionStorage.getItem('auth-roar');\r\n        if (auth && (auth !== 'INVALID')) {\r\n            setLoggedIn(true);\r\n        } else {\r\n            setLoggedIn(false);\r\n        }\r\n    }, [])\r\n\r\n    const getPageToDisplay = useCallback(()=>{\r\n        if (loggedIn) {\r\n            setPage([<Homepage setLogoutFunc={setLoggedIn}/>]);\r\n        } else {\r\n            setPage([<LoginRegister setLoginFunc={setLoggedIn}/>]);\r\n        }\r\n    }, [loggedIn])\r\n\r\n    useEffect(()=>{\r\n        checkLoggedIn();\r\n        getPageToDisplay();\r\n    }, [checkLoggedIn, getPageToDisplay])\r\n    return (\r\n        <div>\r\n            {page}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}