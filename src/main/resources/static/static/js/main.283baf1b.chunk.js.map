{"version":3,"sources":["coponents/Title.js","coponents/Searchbar.js","functions/constructPostDictionary.js","coponents/Post.js","coponents/Reply.js","coponents/PostsTable.js","coponents/LogoutButton.js","pages/Homepage.js","coponents/LoginInput.js","coponents/PasswordInput.js","coponents/LoginTitle.js","coponents/RegisterButton.js","coponents/LoginButton.js","pages/LoginRegister.js","App.js","index.js"],"names":["Title","props","style","className","Searchbar","userInputFunc","searchFunc","InputGroup","type","onChange","event","Button","variant","onClick","constructPostDictionary","allUsers","postDictionaryList","forEach","user","posts","post","postItem","id","name","body","searchChildren3","parent","children","recursionLevel","Array","isArray","length","child","childrenID","push","pID","cID","level","Post","Card","Text","Reply","PostsTable","postDictionary","elementArray","getPost","ID","postID","maxLevel","a","b","constructChildren","parentID","postsToRemove","replyObj","match","index","includes","splice","fp","initialParentID","makePostElement","LogoutButton","setLogoutFunc","sessionStorage","setItem","Homepage","useState","setAllUsers","setPostDictionary","searchText","setSearchText","getAllUsers","useCallback","fetch","response","json","constructAllPosts","newPostDictionary","constructPage","useEffect","target","value","console","log","LoginInput","inputFunc","placeholder","PasswordInput","LoginTitle","RegisterButton","redirectFunc","LoginButton","loginFunc","LoginRegister","setLoginFunc","username","setUsername","password","setPassword","method","headers","text","auth_key","App","loggedIn","setLoggedIn","page","setPage","checkLoggedIn","auth","getItem","getPageToDisplay","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.283baf1b.chunk.js","sourcesContent":["const Title =(props)=>{\r\n    const {style} = props;\r\n    return (\r\n        <h1 className={'title'} style={style}>Welcome to Roar</h1>\r\n    )\r\n}\r\n\r\nexport default Title;","import {InputGroup, Button} from \"react-bootstrap\";\r\n\r\nconst Searchbar = (props) => {\r\n    const {userInputFunc, searchFunc} = props;\r\n    return (\r\n        <InputGroup className={'my-3'}>\r\n            <input type={'search'} onChange={(event) => (userInputFunc(event))} className={'form-control'}/>\r\n            <Button variant={'secondary'} onClick={()=>(searchFunc())}>Search</Button>\r\n        </InputGroup>\r\n    )\r\n}\r\n\r\nexport default Searchbar;","const constructPostDictionary =(allUsers)=>{\r\n    const postDictionaryList = [];\r\n    allUsers.forEach((user)=>{\r\n        user.posts.forEach((post)=>{\r\n            let postItem = {\r\n                'postID': post.id,\r\n                'name': user.name,\r\n                'body': post.body,\r\n                'childrenID': []\r\n            }\r\n            const searchChildren3 =(parent, children, recursionLevel)=>{\r\n                if (Array.isArray(children) && (children.length !== 0)) {\r\n                    children.forEach((child)=>{\r\n                        postItem.childrenID.push({pID: parent.id, cID: child.id, level: recursionLevel});\r\n                        recursionLevel += 1;\r\n                        return searchChildren3(child, child.children, recursionLevel);\r\n                    })\r\n                } else {\r\n                    return postItem;\r\n                }\r\n            }\r\n            searchChildren3(post, post.children, 1);\r\n            postDictionaryList.push(postItem);\r\n        })\r\n    })\r\n    return postDictionaryList;\r\n}\r\n\r\nexport default constructPostDictionary;","import {Card} from \"react-bootstrap\";\r\n\r\nconst Post =(props)=>{\r\n    const {post} = props;\r\n    return (\r\n        <div>\r\n            <Card className={'dark-green-bg'}>\r\n                <Card.Title className={'post-name'}>{post.name}</Card.Title>\r\n                <Card.Text className={'post-text'}>{post.body}</Card.Text>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import {Card} from \"react-bootstrap\";\r\n\r\nconst Reply =(props)=>{\r\n    const {post} = props;\r\n    return (\r\n        <div>\r\n            <Card className={'light-green-bg'}>\r\n                <Card.Title className={'post-name'}>{post.name}</Card.Title>\r\n                <Card.Text className={'post-text'}>{post.body}</Card.Text>\r\n                <Card.Text className={'post-text'}>At reply level {post.level}</Card.Text>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reply;","import Post from \"./Post\";\r\nimport Reply from \"./Reply\";\r\n\r\nconst PostsTable = (props) => {\r\n\r\n    const {postDictionary} = props;\r\n\r\n    const elementArray = [];\r\n\r\n    const makePostElement = () => {\r\n        \r\n        const getPost = (ID) => {\r\n            for (let post in postDictionary) {\r\n                if (postDictionary[post].postID === ID) {\r\n                    return {\r\n                        'postID': postDictionary[post].postID,\r\n                        'name': postDictionary[post].name,\r\n                        'body': postDictionary[post].body\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let maxLevel = 0;\r\n\r\n        const getMaxLevel = () => {\r\n            postDictionary.forEach((post) => {\r\n                let a = 0;\r\n                let b = post.postID;\r\n                if (b > a) {\r\n                    maxLevel = b;\r\n                }\r\n                a = b;\r\n            })\r\n        }\r\n\r\n        getMaxLevel();\r\n\r\n        const removePosts = (posts) => {\r\n            postDictionary.forEach((post, index, postDictionary)=>{\r\n                if (posts.includes(post.postID)) {\r\n                    postDictionary.splice(index, 1);\r\n                }\r\n            })\r\n        }\r\n\r\n        const constructChildren = (children, parentID) => {\r\n            let postsToRemove = [];\r\n            children.forEach((replyObj) => {\r\n                if (replyObj.pID === parentID) {\r\n                    let match = getPost(replyObj.cID);\r\n                    match.level = replyObj.level;\r\n                    elementArray.push(<Reply post={match} key={replyObj.cID}/>);\r\n                    postsToRemove.push(replyObj.cID);\r\n                }\r\n            })\r\n            removePosts(postsToRemove);\r\n        }\r\n\r\n        postDictionary.forEach((post, index, postDictionary) => {\r\n            let fp = getPost(post.postID);\r\n            elementArray.push(<Post post={fp} key={post.postID}/>);\r\n            let initialParentID = post.postID;\r\n            while (initialParentID <= maxLevel) {\r\n                constructChildren(post.childrenID, initialParentID);\r\n                initialParentID += 1;\r\n            }\r\n            postDictionary.splice(index, 1);\r\n        })\r\n\r\n        return elementArray;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {makePostElement()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostsTable;","import {Button} from \"react-bootstrap\";\r\n\r\nconst LogoutButton =(props)=>{\r\n    const {setLogoutFunc, style} = props;\r\n    return (\r\n        <Button variant={'secondary'} onClick={()=>(setLogoutFunc(false), sessionStorage.setItem('auth-roar', ''))}\r\n        className={'rounded-pill'}>Logout</Button>\r\n    )\r\n}\r\n\r\nexport default LogoutButton;","import {useCallback, useEffect, useState} from \"react\";\r\nimport Title from \"../coponents/Title\";\r\nimport Searchbar from \"../coponents/Searchbar\";\r\nimport constructPostDictionary from \"../functions/constructPostDictionary\";\r\nimport PostsTable from \"../coponents/PostsTable\";\r\nimport LogoutButton from \"../coponents/LogoutButton\";\r\n\r\nconst Homepage = (props) => {\r\n\r\n    const {setLogoutFunc} = props;\r\n\r\n    const [allUsers, setAllUsers] = useState([]);\r\n    const [postDictionary, setPostDictionary] = useState([]);\r\n    const [searchText, setSearchText] = useState('');\r\n\r\n    const getAllUsers = useCallback(async () => {\r\n        if (!allUsers.length) {\r\n            let response = await fetch('http://127.0.0.1:8082/users/read');\r\n            let allUsers = await response.json();\r\n            setAllUsers(allUsers);\r\n        }\r\n    }, [allUsers.length]);\r\n\r\n    const constructAllPosts = useCallback(() => {\r\n        let newPostDictionary = constructPostDictionary(allUsers);\r\n        if (newPostDictionary.length) {\r\n            setPostDictionary(newPostDictionary);\r\n        } else {\r\n            setPostDictionary([]);\r\n        }\r\n    }, [allUsers]);\r\n\r\n    const constructPage = useCallback(async () => {\r\n        await getAllUsers();\r\n        await constructAllPosts();\r\n    }, [constructAllPosts, getAllUsers]);\r\n\r\n    const handleInputText = (event) => {\r\n        setSearchText(event.target.value);\r\n    }\r\n\r\n    const constructSearch = () => {\r\n        console.log('feature coming soon');\r\n        // constructAllPosts();\r\n    }\r\n\r\n    useEffect(() => {\r\n        constructPage();\r\n    }, [constructPage, searchText])\r\n\r\n    return (\r\n        <div className={'container-fluid mt-3 col-lg-6 col-sm-12'}>\r\n            <div className={'row'}>\r\n                <Title/>\r\n                <LogoutButton setLogoutFunc={setLogoutFunc}/>\r\n            </div>\r\n            <div className={'row'}>\r\n                <Searchbar userInputFunc={handleInputText} searchFunc={constructSearch}/>\r\n                <PostsTable postDictionary={postDictionary}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage;","const LoginInput =(props)=>{\r\n    const {inputFunc} = props;\r\n    return (\r\n        <input type={'text'} onChange={event => inputFunc(event)}\r\n               className={'form-control rounded-pill my-1'} placeholder={'Username'}/>\r\n    )\r\n}\r\n\r\nexport default LoginInput;","const PasswordInput =(props)=>{\r\n    const {inputFunc} = props;\r\n    return (\r\n        <input type={'password'} onChange={event => inputFunc(event)}\r\n               className={'form-control rounded-pill my-1'} placeholder={'Password'}/>\r\n    )\r\n}\r\n\r\nexport default PasswordInput;","const LoginTitle =()=>{\r\n    return (\r\n        <h3 className={'title text-center'}>Login</h3>\r\n    )\r\n}\r\n\r\nexport default LoginTitle;","import {Button} from \"react-bootstrap\";\r\n\r\nconst RegisterButton = (props) => {\r\n    const {redirectFunc} = props;\r\n    return (\r\n        <Button variant={'secondary'} onClick={() => (redirectFunc())}\r\n                className={'rounded-pill form-control my-1'}>Register</Button>\r\n    )\r\n}\r\n\r\nexport default RegisterButton;","import {Button} from \"react-bootstrap\";\r\n\r\nconst LoginButton = (props) => {\r\n    const {loginFunc} = props;\r\n    return (\r\n        <Button variant={'secondary'} onClick={() => (loginFunc())}\r\n                className={'rounded-pill form-control'}>Login</Button>\r\n    )\r\n}\r\n\r\nexport default LoginButton;","import {useState} from \"react\";\r\nimport LoginInput from \"../coponents/LoginInput\";\r\nimport PasswordInput from \"../coponents/PasswordInput\";\r\nimport LoginTitle from \"../coponents/LoginTitle\";\r\nimport RegisterButton from \"../coponents/RegisterButton\";\r\nimport LoginButton from \"../coponents/LoginButton\";\r\n\r\nconst LoginRegister =(props)=>{\r\n\r\n    const {setLoginFunc} = props;\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const inputUsername = (event) =>{\r\n        setUsername(event.target.value)\r\n    }\r\n\r\n    const inputPassword = (event)=>{\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const registerRedirectFunc =()=>{\r\n        console.log('redirecting soon')\r\n    }\r\n\r\n    const loginFunc = async ()=>{\r\n        let response = await fetch('http://127.0.0.1:8082/users/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'username': username,\r\n                'password': password\r\n            }\r\n        });\r\n        let auth_key = await response.text();\r\n        if (auth_key !== 'INVALID') {\r\n            sessionStorage.setItem('auth-roar', auth_key);\r\n            console.log('Successfully logged in');\r\n            setLoginFunc(true);\r\n        } else {\r\n            console.log('Unsuccessful attempt');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={'container-fluid mt-3 col-lg-6 col-sm-12'}>\r\n            <LoginTitle/>\r\n            <LoginInput inputFunc={inputUsername}/>\r\n            <PasswordInput inputFunc={inputPassword}/>\r\n            <LoginButton loginFunc={loginFunc}/>\r\n            <div className={'separator post-text'}>Or</div>\r\n            <RegisterButton redirectFunc={registerRedirectFunc}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginRegister;","import './css/bootstrap.css';\r\nimport './css/roar.css'\r\nimport './css/fonts.css';\r\nimport Homepage from \"./pages/Homepage\";\r\nimport {useCallback, useEffect, useState} from \"react\";\r\nimport LoginRegister from \"./pages/LoginRegister\";\r\n\r\nconst App = () => {\r\n\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [page, setPage] = useState([]);\r\n\r\n    const checkLoggedIn = useCallback(()=>{\r\n        let auth = sessionStorage.getItem('auth-roar');\r\n        if (auth && (auth !== 'INVALID')) {\r\n            setLoggedIn(true);\r\n        } else {\r\n            setLoggedIn(false);\r\n        }\r\n    }, [])\r\n\r\n    const getPageToDisplay = useCallback(()=>{\r\n        if (loggedIn) {\r\n            setPage([<Homepage setLogoutFunc={setLoggedIn}/>]);\r\n        } else {\r\n            setPage([<LoginRegister setLoginFunc={setLoggedIn}/>]);\r\n        }\r\n    }, [loggedIn])\r\n\r\n    useEffect(()=>{\r\n        checkLoggedIn();\r\n        getPageToDisplay();\r\n    }, [checkLoggedIn, getPageToDisplay])\r\n    return (\r\n        <div>\r\n            {page}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}