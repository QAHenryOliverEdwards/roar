{"version":3,"sources":["coponents/Title.js","coponents/Topbar.js","functions/constructPostDictionary.js","coponents/Post.js","coponents/Reply.js","coponents/PostsTable.js","pages/Homepage.js","App.js","index.js"],"names":["Title","className","Topbar","props","userInputFunc","searchFunc","InputGroup","type","onChange","event","Button","variant","onClick","constructPostDictionary","allUsers","postDictionaryList","forEach","user","posts","post","postItem","id","name","body","searchChildren3","parent","children","recursionLevel","Array","isArray","length","child","childrenID","push","pID","cID","level","Post","Card","Text","Reply","PostsTable","postDictionary","elementArray","console","log","getPost","ID","postID","maxLevel","a","b","constructChildren","parentID","postsToRemove","replyObj","match","index","includes","splice","fp","initialParentID","makePostElement","Homepage","useState","setAllUsers","setPostDictionary","setSearchText","getAllUsers","useCallback","fetch","response","json","constructAllPosts","constructPage","useEffect","target","value","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2aef6b0a.chunk.js","sourcesContent":["const Title =()=>{\r\n    return (\r\n        <h1 className={'title'}>Welcome to Roar</h1>\r\n    )\r\n}\r\n\r\nexport default Title;","import {InputGroup, Button} from \"react-bootstrap\";\r\n\r\nconst Topbar = (props) => {\r\n    const {userInputFunc, searchFunc} = props;\r\n    return (\r\n        <InputGroup className={'my-3'}>\r\n            <input type={'search'} onChange={event => userInputFunc(event)} className={'form-control'}/>\r\n            <Button variant={'secondary'} onClick={()=>(searchFunc())}>Search!</Button>\r\n        </InputGroup>\r\n    )\r\n}\r\n\r\nexport default Topbar;","const constructPostDictionary =(allUsers)=>{\r\n    const postDictionaryList = [];\r\n    allUsers.forEach((user)=>{\r\n        user.posts.forEach((post)=>{\r\n            let postItem = {\r\n                'postID': post.id,\r\n                'name': user.name,\r\n                'body': post.body,\r\n                'childrenID': []\r\n            }\r\n            const searchChildren3 =(parent, children, recursionLevel)=>{\r\n                if (Array.isArray(children) && (children.length !== 0)) {\r\n                    children.forEach((child)=>{\r\n                        postItem.childrenID.push({pID: parent.id, cID: child.id, level: recursionLevel});\r\n                        recursionLevel += 1;\r\n                        return searchChildren3(child, child.children, recursionLevel);\r\n                    })\r\n                } else {\r\n                    return postItem;\r\n                }\r\n            }\r\n            searchChildren3(post, post.children, 1);\r\n            postDictionaryList.push(postItem);\r\n        })\r\n    })\r\n    return postDictionaryList;\r\n}\r\n\r\nexport default constructPostDictionary;","import {Card} from \"react-bootstrap\";\r\n\r\nconst Post =(props)=>{\r\n    const {post} = props;\r\n    return (\r\n        <div>\r\n            <Card className={'dark-green-bg'}>\r\n                <Card.Title className={'post-name'}>{post.name}</Card.Title>\r\n                <Card.Text className={'post-text'}>{post.body}</Card.Text>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import {Card} from \"react-bootstrap\";\r\n\r\nconst Reply =(props)=>{\r\n    const {post} = props;\r\n    return (\r\n        <div>\r\n            <Card className={'light-green-bg'}>\r\n                <Card.Title className={'post-name'}>{post.name}</Card.Title>\r\n                <Card.Text className={'post-text'}>{post.body}</Card.Text>\r\n                <Card.Text className={'post-text'}>At reply level {post.level}</Card.Text>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reply;","import Post from \"./Post\";\r\nimport Reply from \"./Reply\";\r\n\r\nconst PostsTable = (props) => {\r\n\r\n    const {postDictionary} = props;\r\n\r\n    const elementArray = [];\r\n\r\n    const makePostElement = () => {\r\n\r\n        console.log(postDictionary);\r\n\r\n        const getPost = (ID) => {\r\n            for (let post in postDictionary) {\r\n                if (postDictionary[post].postID === ID) {\r\n                    return {\r\n                        'postID': postDictionary[post].postID,\r\n                        'name': postDictionary[post].name,\r\n                        'body': postDictionary[post].body\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let maxLevel = 0;\r\n\r\n        const getMaxLevel = () => {\r\n            postDictionary.forEach((post) => {\r\n                let a = 0;\r\n                let b = post.postID;\r\n                if (b > a) {\r\n                    maxLevel = b;\r\n                }\r\n                a = b;\r\n            })\r\n        }\r\n\r\n        getMaxLevel();\r\n\r\n        const removePosts = (posts) => {\r\n            postDictionary.forEach((post, index, postDictionary)=>{\r\n                if (posts.includes(post.postID)) {\r\n                    postDictionary.splice(index, 1);\r\n                }\r\n            })\r\n        }\r\n\r\n        const constructChildren = (children, parentID) => {\r\n            let postsToRemove = [];\r\n            children.forEach((replyObj) => {\r\n                if (replyObj.pID === parentID) {\r\n                    let match = getPost(replyObj.cID);\r\n                    match.level = replyObj.level;\r\n                    elementArray.push(<Reply post={match} key={replyObj.cID}/>);\r\n                    postsToRemove.push(replyObj.cID);\r\n                }\r\n            })\r\n            removePosts(postsToRemove);\r\n        }\r\n\r\n        postDictionary.forEach((post, index, postDictionary) => {\r\n            let fp = getPost(post.postID);\r\n            elementArray.push(<Post post={fp} key={post.postID}/>);\r\n            let initialParentID = post.postID;\r\n            while (initialParentID <= maxLevel) {\r\n                constructChildren(post.childrenID, initialParentID);\r\n                initialParentID += 1;\r\n            }\r\n            postDictionary.splice(index, 1);\r\n        })\r\n\r\n        return elementArray;\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {makePostElement()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostsTable;","import {useCallback, useEffect, useState} from \"react\";\r\nimport Title from \"../coponents/Title\";\r\nimport Topbar from \"../coponents/Topbar\";\r\nimport constructPostDictionary from \"../functions/constructPostDictionary\";\r\nimport PostsTable from \"../coponents/PostsTable\";\r\n\r\nconst Homepage = () => {\r\n    const [allUsers, setAllUsers] = useState([]);\r\n    const [postDictionary, setPostDictionary] = useState([]);\r\n    const [searchText, setSearchText] = useState('');\r\n\r\n    const getAllUsers = useCallback(async () => {\r\n        if (!allUsers.length) {\r\n            let response = await fetch('http://127.0.0.1:8082/users/read');\r\n            let allUsers = await response.json();\r\n            setAllUsers(allUsers);\r\n        }\r\n    }, [allUsers.length]);\r\n\r\n    const constructAllPosts = useCallback(() => {\r\n        let postDictionary = constructPostDictionary(allUsers);\r\n        if (postDictionary.length) {\r\n            setPostDictionary(postDictionary);\r\n        } else {\r\n            setPostDictionary([]);\r\n        }\r\n    }, [allUsers]);\r\n\r\n    const constructPage = useCallback(async () => {\r\n        await getAllUsers();\r\n        await constructAllPosts();\r\n    }, [constructAllPosts, getAllUsers]);\r\n\r\n    const handleInputText = (event) => {\r\n        setSearchText(event.target.value);\r\n    }\r\n\r\n    const constructSearch = () => {\r\n        constructAllPosts();\r\n    }\r\n\r\n    useEffect(() => {\r\n        constructPage();\r\n    }, [constructPage])\r\n\r\n    return (\r\n        <div className={'container-fluid mt-3'}>\r\n            <Title/>\r\n            <Topbar userInputFunc={handleInputText} searchFunc={constructSearch}/>\r\n            <PostsTable postDictionary={postDictionary}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage;","import './css/bootstrap.css';\r\nimport './css/roar.css'\r\nimport './css/fonts.css';\r\nimport Homepage from \"./pages/Homepage\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <Homepage/>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n"],"sourceRoot":""}